"""fix resume, add competence_contiguities

Revision ID: b6487af4150f
Revises: ccc08697bd73
Create Date: 2025-04-16 22:17:13.515513

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'b6487af4150f'
down_revision: Union[str, None] = 'ccc08697bd73'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('competence_contiguities',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('first_competence_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('second_competence_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('contiguity_coefficient', sa.Numeric(precision=4, scale=3), nullable=False),
    sa.CheckConstraint('first_competence_id != second_competence_id', name='check_first_not_second'),
    sa.ForeignKeyConstraint(['first_competence_id'], ['competencies.id'], ),
    sa.ForeignKeyConstraint(['second_competence_id'], ['competencies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('first_competence_id', 'second_competence_id', name='uq_group_competence_id')
    )
    op.add_column('resumes', sa.Column('vacancy_id', sa.Uuid(), nullable=True))
    op.create_foreign_key(None, 'resumes', 'vacancies', ['vacancy_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'resumes', type_='foreignkey')
    op.drop_column('resumes', 'vacancy_id')
    op.drop_table('competence_contiguities')
    # ### end Alembic commands ###
